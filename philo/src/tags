!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DIED	philo.h	/^# define DIED /;"	d
EAT	philo.h	/^# define EAT /;"	d
FORK	philo.h	/^# define FORK /;"	d
PHILO_H	philo.h	/^# define PHILO_H$/;"	d
SLEEP	philo.h	/^# define SLEEP /;"	d
THINK	philo.h	/^# define THINK /;"	d
check_digit	parsing_utils.c	/^int	check_digit(char *str)$/;"	f
check_input	parsing.c	/^int	check_input(int argc, char **argv)$/;"	f
check_run_simu	thread_management.c	/^int	check_run_simu(t_philo *philo)$/;"	f
data	philo.h	/^	t_data			*data;$/;"	m	struct:s_phil
eating	eat_sleep_think.c	/^int	eating(t_philo *philo)$/;"	f
end_simu	init_run_simu.c	/^void	end_simu(t_philo **philo_array, int nbr_start_philo)$/;"	f
finished_eating	thread_management.c	/^int	finished_eating(t_philo **philo_array, t_data *data)$/;"	f
free_and_destroy_data	utils.c	/^void	free_and_destroy_data(t_data *data)$/;"	f
free_and_destroy_philo	utils.c	/^void	free_and_destroy_philo(t_philo **philo_array, t_data *data)$/;"	f
ft_atoi_positive	parsing_utils.c	/^int	ft_atoi_positive(char *str)$/;"	f
ft_create_out	parsing_utils.c	/^static int	ft_create_out(int i, const char *str)$/;"	f	file:
ft_isdigit	parsing_utils.c	/^int	ft_isdigit(int c)$/;"	f
get_time	utils.c	/^int	get_time(void)$/;"	f
id_philo	philo.h	/^	int				id_philo;$/;"	m	struct:s_phil
init_and_launch_simu	init_run_simu.c	/^int	init_and_launch_simu(t_data *data)$/;"	f
init_data	parsing.c	/^int	init_data(int argc, char **argv, t_data *data)$/;"	f
init_philo	init_run_simu.c	/^t_philo	**init_philo(t_data *data)$/;"	f
last_meal	philo.h	/^	int				last_meal;$/;"	m	struct:s_phil
launch_simu	init_run_simu.c	/^int	launch_simu(t_philo **p_arr, t_data *data)$/;"	f
left_fork	philo.h	/^	pthread_mutex_t	*left_fork;$/;"	m	struct:s_phil
main	main.c	/^int	main(int argc, char **argv)$/;"	f
meals	philo.h	/^	int				meals;$/;"	m	struct:s_data
mutex	philo.h	/^	pthread_mutex_t	*mutex;$/;"	m	struct:s_data
mutex_last_meal	philo.h	/^	pthread_mutex_t	mutex_last_meal;$/;"	m	struct:s_phil
mutex_log	philo.h	/^	pthread_mutex_t	mutex_log;$/;"	m	struct:s_data
mutex_run_sim	philo.h	/^	pthread_mutex_t	mutex_run_sim;$/;"	m	struct:s_data
nbr_phil	philo.h	/^	int				nbr_phil;$/;"	m	struct:s_data
p_sleep	utils.c	/^int	p_sleep(int duration)$/;"	f
print_actions	utils.c	/^void	print_actions(t_philo *philo, char *message)$/;"	f
right_fork	philo.h	/^	pthread_mutex_t	*right_fork;$/;"	m	struct:s_phil
routine	eat_sleep_think.c	/^void	*routine(void *arg)$/;"	f
run_simu	init_run_simu.c	/^int	run_simu(t_philo **philo_array, t_data *data)$/;"	f
run_simu	philo.h	/^	int				run_simu;$/;"	m	struct:s_data
run_thread	thread_management.c	/^int	run_thread(t_philo **philo_array, t_data *data)$/;"	f
s_data	philo.h	/^typedef struct s_data$/;"	s
s_phil	philo.h	/^typedef struct s_phil$/;"	s
set_end_simu	thread_management.c	/^int	set_end_simu(t_data *data)$/;"	f
sleeping	eat_sleep_think.c	/^void	sleeping(t_philo *philo)$/;"	f
start_t	philo.h	/^	int				start_t;$/;"	m	struct:s_data
t_data	philo.h	/^}				t_data;$/;"	t	typeref:struct:s_data
t_philo	philo.h	/^}				t_philo;$/;"	t	typeref:struct:s_phil
t_timeval	philo.h	/^typedef struct timeval	t_timeval;$/;"	t	typeref:struct:timeval
th	philo.h	/^	pthread_t		th;$/;"	m	struct:s_phil
time_to_die	philo.h	/^	int				time_to_die;$/;"	m	struct:s_data
time_to_eat	philo.h	/^	int				time_to_eat;$/;"	m	struct:s_data
time_to_sleep	philo.h	/^	int				time_to_sleep;$/;"	m	struct:s_data
times_eaten	philo.h	/^	int				times_eaten;$/;"	m	struct:s_phil
use_forks	eat_sleep_think.c	/^int	use_forks(t_philo *philo, int take_forks)$/;"	f
